@page "/AddShow"
@rendermode InteractiveServer
@using CineMagicData.Models
@using CineMagic.Services
@inject ShowService ShowService
@inject MovieService MovieService
@inject RoomService RoomService
@inject NavigationManager NavigationManager

<h3>AddShow</h3>
<p>@error</p>
<div>
    <form @onsubmit="HandleSubmit">
        <div class="mb-3">
            <label for="roomNumber" class="form-label">Room Number</label>
            <select @bind="Show.RoomId" class="form-control" id="roomNumber">
                @* Populate this list with actual room numbers from your database or a predefined list *@
                @foreach (var room in _rooms)
                {
                    <option value="@room.Id">@room.room_number</option>
                }
                
                <!-- More room options -->
            </select>
        </div>
        <div class="mb-3">
            <label for="filmTitle" class="form-label">Film Title</label>
            <select @bind="Show.MovieId" class="form-control" id="filmTitle">
                @* Populate this list with actual film titles from your database or a predefined list *@
                @foreach (var movie in _movies)
                {
                    <option value="@movie.Id" >@movie.Title</option>
                }
                <!-- More film options -->
            </select>
        </div>
        <div class="mb-3">
            <label for="showDateTime" class="form-label">Date and Time</label>
            <input @bind="Show.DateTime" type="datetime-local" class="form-control" id="showDateTime">
        </div>
        <button type="submit" class="btn btn-primary">Add Show</button>
    </form>
</div>

@code {
    private RoomMovie Show { get; set; } = new RoomMovie();
    List<Movie> _movies = new List<Movie>();
    List<Room> _rooms = new List<Room>();

    private string error = "";
    
    
    protected override async Task OnInitializedAsync()
    {
        _movies = (await MovieService.GetAllMovies()).ToList();
        _rooms = (await RoomService.GetAllRooms()).ToList();
    }
    
    private async Task HandleSubmit()
    {

        var result = await ShowService.AddShow(Show);

        if (result.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/");
        }

        error = result.ToString();
    }
}